// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing MainScreen MainScreen renders correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "flex": 1,
      },
      Object {
        "paddingBottom": 0,
      },
    ]
  }
>
  <View
    style={
      Object {
        "backgroundColor": "#006de9",
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "center",
          "marginTop": 60,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <Text
          style={
            Object {
              "color": "#fff",
              "fontSize": 28,
              "fontWeight": "600",
            }
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "backgroundColor": "#fff",
          "borderTopEndRadius": 40,
          "borderTopStartRadius": 40,
          "flex": 1.8,
          "marginTop": 30,
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "flex": 1,
            "paddingHorizontal": 20,
          }
        }
      >
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#006de9",
                "fontSize": 16,
                "fontWeight": "700",
                "marginBottom": 15,
                "marginTop": 35,
                "paddingHorizontal": 20,
              }
            }
          >
            Today's Title
          </Text>
          <TextInput
            onChangeText={[Function]}
            onSubmitEditing={[Function]}
            placeholder="What is your focus for today?"
            returnKeyType="done"
            style={
              Object {
                "backgroundColor": "#fff",
                "borderBottomWidth": 0.5,
                "borderColor": "#808080",
                "fontSize": 15,
                "justifyContent": "center",
                "marginHorizontal": 20,
                "paddingHorizontal": 5,
                "paddingVertical": 5,
              }
            }
            value=""
          />
        </View>
        <View
          style={
            Object {
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "#006de9",
                "fontSize": 16,
                "fontWeight": "700",
                "marginBottom": 15,
                "marginTop": 35,
                "paddingHorizontal": 20,
              }
            }
          >
            Today Routine
          </Text>
        </View>
        <RCTSafeAreaView
          emulateUnlessSupported={true}
          style={
            Object {
              "flex": 1,
            }
          }
        >
          <RCTScrollView
            automaticallyAdjustContentInsets={false}
            data={
              Array [
                Object {
                  "id": 1665373596677,
                  "isChecked": false,
                  "text": "",
                },
              ]
            }
            getItem={[Function]}
            getItemCount={[Function]}
            keyExtractor={[Function]}
            onContentSizeChange={[Function]}
            onLayout={[Function]}
            onMomentumScrollBegin={[Function]}
            onMomentumScrollEnd={[Function]}
            onScroll={[Function]}
            onScrollBeginDrag={[Function]}
            onScrollEndDrag={[Function]}
            removeClippedSubviews={false}
            renderItem={[Function]}
            scrollEventThrottle={50}
            stickyHeaderIndices={Array []}
            viewabilityConfigCallbackPairs={Array []}
          >
            <View>
              <View
                onLayout={[Function]}
                style={null}
              >
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "flexDirection": "row",
                      "marginHorizontal": 20,
                    }
                  }
                >
                  <View
                    accessible={true}
                    collapsable={false}
                    focusable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <Text />
                  </View>
                  <View
                    style={
                      Object {
                        "paddingVertical": 10,
                      }
                    }
                  >
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Array [
                          Object {
                            "alignItems": "center",
                            "backgroundColor": "transparent",
                            "borderColor": "#006de9",
                            "borderRadius": 3,
                            "borderWidth": 2,
                            "height": 20,
                            "justifyContent": "center",
                            "width": 20,
                          },
                          false,
                        ]
                      }
                    />
                  </View>
                  <View
                    style={
                      Object {
                        "alignItems": "center",
                        "flex": 1,
                        "flexDirection": "row",
                        "justifyContent": "space-between",
                        "paddingRight": 5,
                      }
                    }
                  >
                    <TextInput
                      onChangeText={[Function]}
                      onEndEditing={[Function]}
                      onKeyPress={[Function]}
                      onSubmitEditing={[Function]}
                      placeholder="Click Here"
                      returnKeyType="done"
                      style={
                        Array [
                          Object {
                            "backgroundColor": "#fff",
                            "flex": 1,
                            "fontSize": 15,
                            "justifyContent": "center",
                            "marginHorizontal": 5,
                            "paddingHorizontal": 5,
                            "paddingVertical": 10,
                          },
                          false,
                        ]
                      }
                      value=""
                    />
                    <View
                      accessible={true}
                      collapsable={false}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    />
                  </View>
                </View>
              </View>
            </View>
          </RCTScrollView>
        </RCTSafeAreaView>
        <View />
      </View>
      <View
        onLayout={[Function]}
        pointerEvents="box-none"
        style={
          Array [
            undefined,
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "bottom": 0,
              "overflow": "hidden",
              "top": 0,
            },
          ]
        }
      />
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Array [
            Object {
              "opacity": 1,
            },
          ]
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "rgba(0, 109, 233, 0.8)",
              "borderTopLeftRadius": 50,
              "borderTopRightRadius": 50,
              "justifyContent": "center",
              "paddingVertical": 16,
            }
          }
        >
          <Text />
        </View>
      </View>
    </View>
  </View>
</View>
`;
